package entity

import (
	"time"
    "{{AppName}}/pkg/core/entity"
)

// {{SingularCapitalName}} represents the {{SingularLowerName}} entity
type {{SingularCapitalName}} struct {
	ID        uint          `json:"id" gorm:"primaryKey;autoIncrement;not null"` // Primary key
	Name      string        `json:"name" gorm:"type:varchar(100);unique;not null" validate:"required,min=3,max=100"`
	CreatedAt time.Time     `json:"created_at" gorm:"autoCreateTime"`
	UpdatedAt time.Time     `json:"updated_at" gorm:"autoUpdateTime"`
	Status    entity.Status `json:"status" gorm:"default:active" validate:"required,oneof=active inactive pending"`
}

// Update{{SingularCapitalName}} represents the {{SingularLowerName}} update request
type Update{{SingularCapitalName}} struct {
	Name   string        `json:"name" validate:"omitempty,min=3,max=100"`
	Status entity.Status `json:"status" gorm:"default:active" validate:"omitempty,oneof=active inactive pending"`
	UpdatedAt time.Time     `json:"updated_at" gorm:"autoUpdateTime"`
}

// Response{{SingularCapitalName}} represents the {{SingularLowerName}} response
type Response{{SingularCapitalName}} struct {
	ID        uint          `json:"id"`
	Name      string        `json:"name"`
	CreatedAt time.Time     `json:"created_at"`
	UpdatedAt time.Time     `json:"updated_at"`
	Status    entity.Status `json:"status"`
}

type {{SingularCapitalName}}ResponsePagination struct {
	Data       []*Response{{SingularCapitalName}}   `json:"data"`
	Pagination entity.Pagination `json:"pagination"`
}
